{"version":3,"sources":["api.js","components/ProductListPage/ProductListPage.js","components/ProductPage/ProductPage.js","components/RegisterPage/RegisterPage.js","components/LoginPage/LoginPage.js","components/Navbar/Navbar.js","components/ModalComponent/ModalComponent.js","components/ReviewModal/ReviewModal.js","components/Review/Review.js","components/Product/Product.js","App.js","serviceWorker.js","index.js"],"names":["requestURL","registerUser","bodyData","a","async","fetch","method","body","JSON","stringify","headers","response","json","result","console","error","loginUser","postReview","id","token","Authorization","getProducts","getReviews","log","ProductListPage","props","state","productItems","loading","this","setState","fetchGetProducts","className","length","map","item","key","productItem","Component","ProductPage","fetchGetReviews","product","location","reviewList","toggleReviewModal","prevState","showReviewModal","renderReviews","type","onClick","reverse","reviewItem","renderProductInfo","src","img","alt","title","text","myReviewList","isAuth","show","onClose","RegisterPage","fetchRegisterUser","e","preventDefault","username","password","success","onLogin","message","onChangeUsername","val","target","value","trim","onChangePassword","to","htmlFor","onChange","required","LoginPage","fetchLoginUser","Navbar","logout","onLogout","history","push","pathname","withRouter","ModalComponent","children","componentStyles","cn","modal","transitionSpeed","closeOnOuterClick","ReviewModal","fetchPostReview","rate","onChangeRating","onChangeText","count","size","color2","edit","half","rows","maxLength","Review","created_by","Product","App","localStorage","setItem","removeItem","Boolean","getItem","exact","path","component","render","from","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e59084cf.chunk.js","sourcesContent":["const requestURL = \"http://smktesting.herokuapp.com\";\r\n\r\nexport const registerUser = async bodyData => {\r\n  try {\r\n    let response = await fetch(requestURL + \"/api/register/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(bodyData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n\r\nexport const loginUser = async bodyData => {\r\n  try {\r\n    let response = await fetch(requestURL + \"/api/login/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(bodyData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n\r\nexport const postReview = async (bodyData, id, token) => {\r\n  try {\r\n    let response = await fetch(requestURL + `/api/reviews/${id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(bodyData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n\r\nexport const getProducts = async () => {\r\n  try {\r\n    let response = await fetch(requestURL + `/api/products/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n\r\nexport const getReviews = async (id, token) => {\r\n  try {\r\n    let response = await fetch(requestURL + `/api/reviews/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    console.log(\"getReviews result\", result);\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./ProductListPage.sass\";\r\nimport { getProducts } from \"../../api.js\";\r\nimport { Product } from \"../index\";\r\n\r\nexport default class ProductListPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      productItems: [],\r\n      loading: false,\r\n      error: false\r\n    };\r\n  }\r\n\r\n  async fetchGetProducts() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    try {\r\n      const result = await getProducts();\r\n      this.setState({\r\n        productItems: result\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGetProducts();\r\n  }\r\n\r\n  render() {\r\n    const { productItems } = this.state;\r\n\r\n    return (\r\n      <div className=\"productListWrap container\">\r\n        <h2 className=\"listTitle\"> List of products</h2>\r\n        <ul className=\"productsGroupList\">\r\n          {productItems && productItems.length > 0 ? (\r\n            productItems.map(item => (\r\n              <Product key={item.id} productItem={item} />\r\n            ))\r\n          ) : (\r\n            <li className=\"productMessage\">There are no products</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getReviews } from \"../../api.js\";\r\nimport { ReviewModal, Review } from \"../index\";\r\nimport \"./ProductPage.sass\";\r\n\r\nexport default class ProductPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      reviewList: [],\r\n      myReviewList: [],\r\n      loading: false,\r\n      error: false,\r\n      showReviewModal: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGetReviews();\r\n  }\r\n\r\n  fetchGetReviews = async () => {\r\n    const { product } = this.props.location.state;\r\n\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    try {\r\n      const result = await getReviews(product.id, this.props.token);\r\n      this.setState({\r\n        reviewList: result\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n    console.log(\"reviewList\", this.state.reviewList);\r\n  };\r\n\r\n  toggleReviewModal = () => {\r\n    this.setState(prevState => ({\r\n      showReviewModal: !prevState.showReviewModal\r\n    }));\r\n  };\r\n\r\n  postReview = async () => {\r\n    const { product } = this.props.location.state;\r\n\r\n    try {\r\n      const result = await getReviews(product.id, this.props.token);\r\n      this.setState({\r\n        reviewList: result\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n    this.toggleReviewModal();\r\n  };\r\n\r\n  renderReviews = () => {\r\n    const { reviewList } = this.state;\r\n\r\n    return (\r\n      <div className=\"reviewsWrap\">\r\n        <div className=\"commnetsTopGroup\">\r\n          <h3>Отзывы</h3>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={this.toggleReviewModal}\r\n          >\r\n            Написать отзыв\r\n          </button>\r\n        </div>\r\n        <ul className=\"reviewsGroupList\">\r\n          {reviewList.length > 0 ? (\r\n            reviewList\r\n              .reverse()\r\n              .map(item => <Review key={item.id} reviewItem={item} />)\r\n          ) : (\r\n            <li className=\"productMessage\">There are no reviews here.</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderProductInfo = () => {\r\n    const { product } = this.props.location.state;\r\n\r\n    return (\r\n      <div className=\"productTopBlock\">\r\n        <img\r\n          className=\"\"\r\n          src={`http://smktesting.herokuapp.com/static/${product.img}`}\r\n          alt=\"\"\r\n        />\r\n        <h2 className=\"productTitle\">{product.title}</h2>\r\n        <div className=\"productText\">{product.text}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      props: {\r\n        isAuth,\r\n        token,\r\n        location: {\r\n          state: { product }\r\n        }\r\n      },\r\n      state: { showReviewModal }\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {this.renderProductInfo()}\r\n        {this.renderReviews()}\r\n        <ReviewModal\r\n          show={showReviewModal}\r\n          onClose={this.toggleReviewModal}\r\n          postReview={this.postReview}\r\n          product={product}\r\n          isAuth={isAuth}\r\n          token={token}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { registerUser } from \"../../api.js\";\r\nimport \"./RegisterPage.sass\";\r\n\r\nexport default class RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      error: false\r\n    };\r\n  }\r\n\r\n  fetchRegisterUser = async e => {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    try {\r\n      const result = await registerUser({ username, password });\r\n      console.log(\"fetchRegisterUser result\", result);\r\n\r\n      if (result.success) {\r\n        this.props.onLogin(result.token, username);\r\n      } else {\r\n        this.setState({\r\n          error: result.message\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error\r\n      });\r\n    }\r\n    console.log(\"error\", this.state.error);\r\n  };\r\n\r\n  onChangeUsername = e => {\r\n    let val = e.target.value.trim();\r\n    this.setState({\r\n      username: val\r\n    });\r\n  };\r\n\r\n  onChangePassword = e => {\r\n    let val = e.target.value.trim();\r\n    this.setState({\r\n      password: val\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      state: { username, password, error }\r\n    } = this;\r\n\r\n    if (this.props.isAuth) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"registerWrap\">\r\n        <form className=\"form\">\r\n          <div className=\"formContent\">\r\n            <h1 className=\"formTitle\">Регистрация</h1>\r\n            <div className=\"formGroup\">\r\n              <label htmlFor=\"registerUsernameArea\">Юзернейм</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={username}\r\n                onChange={this.onChangeUsername}\r\n                id=\"registerUsernameArea\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"formGroup\">\r\n              <label htmlFor=\"registerPasswordArea\">Пароль</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                value={password}\r\n                onChange={this.onChangePassword}\r\n                id=\"registerPasswordArea\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"btnWrap\">\r\n              <button\r\n                className=\"btnAuth btn btn-primary \"\r\n                type=\"submit\"\r\n                onClick={this.fetchRegisterUser}\r\n              >\r\n                Создать аккаунт\r\n              </button>\r\n            </div>\r\n            {error && <div className=\"errorMessage\">{error}</div>}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { loginUser } from \"../../api.js\";\r\nimport \"./LoginPage.sass\";\r\n\r\nexport default class LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      error: false\r\n    };\r\n  }\r\n\r\n  fetchLoginUser = async e => {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    try {\r\n      const result = await loginUser({ username, password });\r\n      console.log(\"fetchLoginUser result\", result);\r\n      if (result.success) {\r\n        this.props.onLogin(result.token, username);\r\n      } else {\r\n        this.setState({\r\n          error: result.message\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error\r\n      });\r\n    }\r\n\r\n    console.log(\"error\", this.state.error);\r\n  };\r\n\r\n  onChangeUsername = e => {\r\n    let val = e.target.value.trim();\r\n    this.setState({\r\n      username: val\r\n    });\r\n  };\r\n\r\n  onChangePassword = e => {\r\n    let val = e.target.value.trim();\r\n    this.setState({\r\n      password: val\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      state: { username, password, error }\r\n    } = this;\r\n\r\n    if (this.props.isAuth) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"loginWrap\">\r\n        <form className=\"form\">\r\n          <div className=\"formContent\">\r\n            <h1 className=\"formTitle\">Вход</h1>\r\n            <div className=\"formGroup\">\r\n              <label htmlFor=\"loginUsernameArea\">Юзернейм</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={username}\r\n                onChange={this.onChangeUsername}\r\n                id=\"loginUsernameArea\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"formGroup\">\r\n              <label htmlFor=\"loginPasswordArea\">Пароль</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                value={password}\r\n                onChange={this.onChangePassword}\r\n                id=\"loginPasswordArea\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"btnWrap\">\r\n              <button\r\n                className=\"btnAuth btn btn-primary \"\r\n                type=\"submit\"\r\n                onClick={this.fetchLoginUser}\r\n              >\r\n                Войти\r\n              </button>\r\n            </div>\r\n            {error && <div className=\"errorMessage\">{error}</div>}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.sass\";\r\n\r\nclass Navbar extends Component {\r\n  logout = () => {\r\n    this.props.onLogout();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand navbar-light\">\r\n        <div className=\"container\">\r\n          <div className=\"row w-100\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul className=\"navList navbar-nav d-flex w-100\">\r\n                <Link className=\"btn btn-dark navLinkHome mr-auto\" to={`/`}>\r\n                  Домой\r\n                </Link>\r\n                {this.props.isAuth ? (\r\n                  <div className=\"navUserBlock\">\r\n                    <div className=\"navUser\">{this.props.username}</div>\r\n                    <div\r\n                      onClick={this.logout}\r\n                      className=\"btn btn-warning navLogOut\"\r\n                    >\r\n                      Выйти ➔\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"navAuthWrap ml-auto\">\r\n                    <li className=\"nav-item navBtn\">\r\n                      <Link\r\n                        className=\"nav-link navLoginBtn btn btn-light\"\r\n                        to={{\r\n                          pathname: `/login`\r\n                        }}\r\n                      >\r\n                        Вход\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item navBtn\">\r\n                      <Link\r\n                        className=\"nav-link navRegisterBtn btn btn-success \"\r\n                        to={{\r\n                          pathname: `/register`\r\n                        }}\r\n                      >\r\n                        Регистрация\r\n                      </Link>\r\n                    </li>\r\n                  </div>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport ModalWindow from \"simple-react-modal\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./ModalComponent.sass\";\r\n\r\nexport default class ModalComponent extends Component {\r\n  render() {\r\n    const {\r\n      props: { className, onClose, show, children }\r\n    } = this;\r\n\r\n    const componentStyles = cn({ modal: true }, { [className]: true });\r\n\r\n    return (\r\n      <ModalWindow\r\n        className={componentStyles}\r\n        show={show}\r\n        onClose={onClose}\r\n        transitionSpeed={300}\r\n        closeOnOuterClick={false}\r\n      >\r\n        <div className=\"modalCloseWrap\" onClick={onClose}>\r\n          x\r\n        </div>\r\n        <div className=\"contentWrap\">{children}</div>\r\n      </ModalWindow>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactStars from \"react-stars\";\r\n\r\nimport { postReview } from \"../../api.js\";\r\nimport { ModalComponent } from \"../index\";\r\nimport \"./ReviewModal.sass\";\r\n\r\nexport default class ReviewModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rate: 0,\r\n      text: \"\",\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  fetchPostReview = async () => {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    try {\r\n      const { rate, text } = this.state;\r\n      if (rate !== 0 && text !== \"\") {\r\n        const result = await postReview(\r\n          { rate, text },\r\n          this.props.product.id,\r\n          this.props.token\r\n        );\r\n        console.log(\"fetchPostReview result\", result);\r\n        this.props.postReview(result);\r\n      }\r\n      this.setState({\r\n        rate: 0,\r\n        text: \"\"\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeRating = rate => {\r\n    this.setState({\r\n      rate\r\n    });\r\n  };\r\n\r\n  onChangeText = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      props: { show, onClose },\r\n      state: { rate, text }\r\n    } = this;\r\n\r\n    if (!this.props.isAuth) {\r\n      return (\r\n        <ModalComponent\r\n          show={show}\r\n          onClose={onClose}\r\n          className=\"reviewModalMessage\"\r\n        >\r\n          <h4>Войдите, чтобы написать отзыв.</h4>\r\n        </ModalComponent>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ModalComponent show={show} onClose={onClose} className=\"reviewModalWrap\">\r\n        <h4 className=\"reviewModalTitle\">Написать отзыв</h4>\r\n        <ReactStars\r\n          value={rate}\r\n          count={5}\r\n          size={60}\r\n          color2={\"#ff8d00\"}\r\n          edit={true}\r\n          className=\"setReviewRating\"\r\n          half={false}\r\n          onChange={this.onChangeRating}\r\n        />\r\n        <div className=\"form-group reviewBlock\">\r\n          <div className=\"reviewModalItem\">\r\n            <label htmlFor=\"reviewArea\">Отзыв</label>\r\n            <textarea\r\n              className=\"form-control reviewModalText\"\r\n              rows=\"5\"\r\n              required\r\n              id=\"reviewArea\"\r\n              maxLength=\"100\"\r\n              value={text}\r\n              onChange={this.onChangeText}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"reviewBtnWrap\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={this.fetchPostReview}\r\n          >\r\n            Оставить отзыв\r\n          </button>\r\n        </div>\r\n      </ModalComponent>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactStars from \"react-stars\";\r\nimport \"./Review.sass\";\r\n\r\nconst Review = props => {\r\n  const { reviewItem } = props;\r\n\r\n  return (\r\n    <li className=\"reviewProductItem\">\r\n      <div className=\"reviewCreator\">{reviewItem.created_by.username}</div>\r\n      <div className=\"reviewContent\">\r\n        <ReactStars\r\n          value={reviewItem.rate}\r\n          count={5}\r\n          size={30}\r\n          color2={\"#ff8d00\"}\r\n          edit={false}\r\n          className=\"reviewRate\"\r\n        />\r\n        <div>{reviewItem.text}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Product extends Component {\r\n  render() {\r\n    const { productItem } = this.props;\r\n\r\n    return (\r\n      <li className=\"card productItem\">\r\n        <Link\r\n          to={{\r\n            pathname: `/productlist/${productItem.id}`,\r\n            state: {\r\n              product: productItem\r\n            }\r\n          }}\r\n        >\r\n          <img\r\n            className=\"card-img-top\"\r\n            src={`http://smktesting.herokuapp.com/static/${productItem.img}`}\r\n            alt=\"\"\r\n          />\r\n          <div className=\"card-body productBody\">\r\n            <h4 className=\"card-title\">{productItem.title}</h4>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport {\n  Navbar,\n  ProductListPage,\n  ProductPage,\n  RegisterPage,\n  LoginPage\n} from \"./components/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAuth: Boolean(localStorage.getItem(\"token\")),\n      username: localStorage.getItem(\"username\"),\n      token: localStorage.getItem(\"token\")\n    };\n  }\n\n  onLogin = (token, username) => {\n    this.setState({\n      isAuth: true,\n      token,\n      username\n    });\n\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"username\", username);\n  };\n\n  onLogout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"token\");\n\n    this.setState({\n      isAuth: false,\n      username: \"\"\n    });\n  };\n\n  render() {\n    const { isAuth, username, token } = this.state;\n\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar\n            onLogin={this.onLogin}\n            onLogout={this.onLogout}\n            isAuth={isAuth}\n            username={username}\n          />\n          <Switch>\n            <Route exact path=\"/productlist\" component={ProductListPage} />\n            <Route\n              exact\n              path=\"/productlist/:id\"\n              render={props => (\n                <ProductPage\n                  {...props}\n                  isAuth={isAuth}\n                  username={username}\n                  token={token}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={props => (\n                <RegisterPage\n                  {...props}\n                  onLogin={this.onLogin}\n                  onLogout={this.onLogout}\n                  isAuth={isAuth}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={props => (\n                <LoginPage {...props} onLogin={this.onLogin} isAuth={isAuth} />\n              )}\n            />\n            {isAuth && <Redirect to=\"/productlist\" />}\n            <Redirect from=\"/\" to=\"/productlist\" />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}