{"version":3,"sources":["api.js","components/ProductListPage/ProductListPage.js","components/ProductPage/ProductPage.js","components/RegisterPage/RegisterPage.js","components/LoginPage/LoginPage.js","components/Navbar/Navbar.js","components/ModalComponent/ModalComponent.js","components/ReviewModal/ReviewModal.js","components/Review/Review.js","components/Product/Product.js","App.js","serviceWorker.js","index.js"],"names":["requestURL","registerUser","bodyData","a","async","fetch","method","body","JSON","stringify","headers","response","json","result","console","error","loginUser","postReview","id","token","Authorization","getProducts","getReviews","ProductListPage","props","state","productItems","this","setState","fetchGetProducts","log","className","length","map","item","key","productItem","Component","ProductPage","fetchGetReviews","location","to","product","reviewList","reverse","toggleReviewModal","prevState","showReviewModal","renderReviews","type","onClick","reviewItem","renderProductInfo","src","img","alt","title","text","isAuth","show","onClose","RegisterPage","fetchRegisterUser","e","preventDefault","isValid","validate","username","password","success","onLogin","message","test","onChangeUsername","val","target","value","match","onChangePassword","htmlFor","onChange","required","LoginPage","fetchLoginUser","Navbar","logout","onLogout","history","push","withRouter","ModalComponent","children","componentStyles","cn","modal","transitionSpeed","closeOnOuterClick","ReviewModal","fetchPostReview","rate","rateError","textError","onChangeRating","onChangeText","trim","count","size","color2","edit","half","rows","maxLength","Review","created_by","Product","pathname","App","localStorage","setItem","removeItem","Boolean","getItem","exact","path","component","render","from","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ff40756.chunk.js","sourcesContent":["const requestURL = \"http://smktesting.herokuapp.com\";\r\n\r\nexport const registerUser = async bodyData => {\r\n  try {\r\n    let response = await fetch(requestURL + \"/api/register/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(bodyData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n\r\nexport const loginUser = async bodyData => {\r\n  try {\r\n    let response = await fetch(requestURL + \"/api/login/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(bodyData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n  \r\nexport const postReview = async (bodyData, id, token) => {\r\n  try {\r\n    let response = await fetch(requestURL + `/api/reviews/${id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(bodyData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n\r\nexport const getProducts = async () => {\r\n  try {\r\n    let response = await fetch(requestURL + `/api/products/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n\r\nexport const getReviews = async id => {\r\n  try {\r\n    let response = await fetch(requestURL + `/api/reviews/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    let result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Ошибка\", error);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./ProductListPage.sass\";\r\nimport { getProducts } from \"../../api.js\";\r\nimport { Product } from \"../index\";\r\n\r\nexport default class ProductListPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      productItems: [],\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  async fetchGetProducts() {\r\n    try {\r\n      const result = await getProducts();\r\n      this.setState({\r\n        productItems: result,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGetProducts();\r\n  }\r\n\r\n  render() {\r\n    const { productItems } = this.state;\r\n    console.log(\"productItems\", productItems);\r\n\r\n    return (\r\n      <div className=\"productListWrap container\">\r\n        <h2 className=\"listTitle\"> List of products</h2>\r\n        <ul className=\"productsGroupList\">\r\n          {productItems && productItems.length > 0 ? (  \r\n            productItems.map((item) => (\r\n              <Product key={item.id} productItem={item} />\r\n            ))\r\n          ) : (\r\n            <li className=\"productMessage\">There are no products</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { getReviews } from \"../../api.js\";\r\nimport { ReviewModal, Review } from \"../index\";\r\nimport \"./ProductPage.sass\";\r\n\r\nexport default class ProductPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      reviewList: [],\r\n      error: false,\r\n      showReviewModal: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGetReviews();\r\n  }\r\n\r\n  fetchGetReviews = async () => {\r\n    if (!this.props.location.state) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const { product } = this.props.location.state;\r\n\r\n    try {\r\n      const result = await getReviews(product.id);\r\n      this.setState({\r\n        reviewList: result.reverse(),\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleReviewModal = () => {\r\n    this.setState((prevState) => ({\r\n      showReviewModal: !prevState.showReviewModal,\r\n    }));\r\n  };\r\n\r\n  postReview = async () => {\r\n    const { product } = this.props.location.state;\r\n\r\n    try {\r\n      const result = await getReviews(product.id, this.props.token);\r\n      this.setState({\r\n        reviewList: result.reverse(),\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error,\r\n      });\r\n    }\r\n    this.toggleReviewModal();\r\n  };\r\n\r\n  renderReviews = () => {\r\n    const { reviewList } = this.state;\r\n\r\n    return (\r\n      <div className=\"reviewsWrap\">\r\n        <div className=\"commnetsTopGroup\">\r\n          <h3>Отзывы</h3>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={this.toggleReviewModal}\r\n          >\r\n            Написать отзыв\r\n          </button>\r\n        </div>\r\n        <ul className=\"reviewsGroupList\">\r\n          {reviewList.length > 0 ? (\r\n            reviewList.map((item) => <Review key={item.id} reviewItem={item} />)\r\n          ) : (\r\n            <li className=\"productMessage\">There are no reviews here.</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderProductInfo = () => {\r\n    const { product } = this.props.location.state;\r\n\r\n    return (\r\n      <div className=\"productTopBlock\">\r\n        <img\r\n          className=\"\"\r\n          src={`http://smktesting.herokuapp.com/static/${product.img}`}\r\n          alt=\"\"\r\n        />\r\n        <h2 className=\"productTitle\">{product.title}</h2>\r\n        <div className=\"productText\">{product.text}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.location.state) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const {\r\n      props: {\r\n        isAuth,\r\n        token,\r\n        location: {\r\n          state: { product },\r\n        },\r\n      },\r\n      state: { showReviewModal },\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {this.renderProductInfo()}\r\n        {this.renderReviews()}\r\n        <ReviewModal\r\n          show={showReviewModal}\r\n          onClose={this.toggleReviewModal}\r\n          postReview={this.postReview}\r\n          product={product}\r\n          isAuth={isAuth}\r\n          token={token}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { registerUser } from \"../../api.js\";\r\nimport \"./RegisterPage.sass\";\r\n\r\nexport default class RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      error: false,\r\n      success: false\r\n    };\r\n  }\r\n\r\n  fetchRegisterUser = async e => {\r\n    e.preventDefault();\r\n    const isValid = this.validate();\r\n\r\n    try {\r\n      if (isValid) {\r\n        const { username, password } = this.state;\r\n        const result = await registerUser({ username, password });\r\n\r\n        if (result.success) {\r\n          this.props.onLogin(result.token, username);\r\n        } else {\r\n          this.setState({\r\n            error: result.message\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error\r\n      });\r\n    }\r\n  };\r\n\r\n  validate = () => {\r\n    const { username, password } = this.state;\r\n    let error = \"\";\r\n\r\n    if (username === \"\" && password === \"\") {\r\n      error = \"Вы не можете оставить поля пустыми\";\r\n    } else if (username === \"\" || /^\\s+$/.test(username)) {\r\n      error = \"Вы должны придумать юзернейм\";\r\n    } else if (password === \"\") {\r\n      error = \"Вы должны придумать пароль\";\r\n    }\r\n\r\n    if (error) {\r\n      this.setState({\r\n        error\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  onChangeUsername = e => {\r\n    let val = e.target.value;\r\n\r\n    if (!val.match(/\\s/)) {\r\n      this.setState({\r\n        username: val\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangePassword = e => {\r\n    let val = e.target.value;\r\n    this.setState({\r\n      password: val\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      state: { username, password, error, success }\r\n    } = this;\r\n\r\n    if (this.props.isAuth) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"registerWrap\">\r\n        <form className=\"form\">\r\n          <div className=\"formContent\">\r\n            <h1 className=\"formTitle\">Регистрация</h1>\r\n            <div className=\"formGroup\">\r\n              <label htmlFor=\"registerUsernameArea\">Юзернейм</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={username}\r\n                onChange={this.onChangeUsername}\r\n                id=\"registerUsernameArea\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"formGroup\">\r\n              <label htmlFor=\"registerPasswordArea\">Пароль</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                value={password}\r\n                onChange={this.onChangePassword}\r\n                id=\"registerPasswordArea\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"btnWrap\">\r\n              <button\r\n                className=\"btnAuth btn btn-success \"\r\n                type=\"submit\"\r\n                onClick={this.fetchRegisterUser}\r\n              >\r\n                Создать аккаунт\r\n              </button>\r\n            </div>\r\n            {error && <div className=\"errorMessage\">{error}</div>}\r\n            {success}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { loginUser } from \"../../api.js\";\r\nimport \"./LoginPage.sass\";\r\n\r\nexport default class LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      error: false\r\n    };\r\n  }\r\n\r\n  fetchLoginUser = async e => {\r\n    e.preventDefault();\r\n    const isValid = this.validate();\r\n\r\n    try {\r\n      if (isValid) {\r\n        const { username, password } = this.state;\r\n        const result = await loginUser({ username, password });\r\n\r\n        if (result.success) {\r\n          this.props.onLogin(result.token, username);\r\n        } else {\r\n          this.setState({\r\n            error: result.message\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error\r\n      });\r\n    }\r\n  };\r\n\r\n  validate = () => {\r\n    const { username, password } = this.state;\r\n    let error = \"\";\r\n\r\n    if (username === \"\" && password === \"\") {\r\n      error = \"Вы не можете оставить поля пустыми\";\r\n    } else if (username === \"\" || /^\\s+$/.test(username)) {\r\n      error = \"Вы должны ввести юзернейм\";\r\n    } else if (password === \"\") {\r\n      error = \"Вы должны ввести пароль\";\r\n    }\r\n\r\n    if (error) {\r\n      this.setState({\r\n        error\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  onChangeUsername = e => {\r\n    let val = e.target.value;\r\n\r\n    if (!val.match(/\\s/)) {\r\n      this.setState({\r\n        username: val\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangePassword = e => {\r\n    let val = e.target.value;\r\n    this.setState({\r\n      password: val\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      state: { username, password, error }\r\n    } = this;\r\n\r\n    if (this.props.isAuth) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"loginWrap\">\r\n        <form className=\"form\">\r\n          <div className=\"formContent\">\r\n            <h1 className=\"formTitle\">Вход</h1>\r\n            <div className=\"formGroup\">\r\n              <label htmlFor=\"loginUsernameArea\">Юзернейм</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={username}\r\n                onChange={this.onChangeUsername}\r\n                id=\"loginUsernameArea\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"formGroup\">\r\n              <label htmlFor=\"loginPasswordArea\">Пароль</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                value={password}\r\n                onChange={this.onChangePassword}\r\n                id=\"loginPasswordArea\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"btnWrap\">\r\n              <button\r\n                className=\"btnAuth btn btn-primary \"\r\n                type=\"submit\"\r\n                onClick={this.fetchLoginUser}\r\n              >\r\n                Войти\r\n              </button>\r\n            </div>\r\n            {error && <div className=\"errorMessage\">{error}</div>}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport \"./Navbar.sass\";\r\n\r\nclass Navbar extends Component {\r\n  logout = () => {\r\n    this.props.onLogout();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand navbar-light\">\r\n        <div className=\"container\">\r\n          <div className=\"row w-100\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul className=\"navList navbar-nav d-flex w-100\">\r\n                <Link className=\"btn btn-dark navButton mr-auto\" to={`/`}>\r\n                  Домой\r\n                </Link>\r\n                {this.props.isAuth ? (\r\n                  <div className=\"navUserBlock\">\r\n                    <div className=\"navUser\">{this.props.username}</div>\r\n                    <div\r\n                      onClick={this.logout}\r\n                      className=\"btn btn-warning navButton\"\r\n                    >\r\n                      Выйти ➔\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"navAuthWrap ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                      <Link className=\"navButton btn btn-primary\" to=\"/login\">\r\n                        Вход\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link\r\n                        className=\"navButton btn btn-success \"\r\n                        to=\"/register\"\r\n                      >\r\n                        Регистрация\r\n                      </Link>\r\n                    </li>\r\n                  </div>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React from \"react\";\r\nimport ModalWindow from \"simple-react-modal\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./ModalComponent.sass\";\r\n\r\nconst ModalComponent = props => {\r\n  const { className, onClose, show, children } = props;\r\n\r\n  const componentStyles = cn({ modal: true }, { [className]: true });\r\n\r\n  return (\r\n    <ModalWindow\r\n      className={componentStyles}\r\n      show={show}\r\n      onClose={onClose}\r\n      transitionSpeed={300}\r\n      closeOnOuterClick={false}\r\n    >\r\n      <div className=\"modalCloseWrap\" onClick={onClose}>\r\n        x\r\n      </div>\r\n      <div className=\"contentWrap\">{children}</div>\r\n    </ModalWindow>\r\n  );\r\n};\r\n\r\nexport default ModalComponent;\r\n","import React, { Component } from \"react\";\r\nimport ReactStars from \"react-stars\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { postReview } from \"../../api.js\";\r\nimport { ModalComponent } from \"../index\";\r\nimport \"./ReviewModal.sass\";\r\n\r\nexport default class ReviewModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rate: 0,\r\n      text: \"\",\r\n      error: false,\r\n      rateError: \"\",\r\n      textError: \"\"\r\n    };\r\n  }\r\n\r\n  fetchPostReview = async () => {\r\n    try {\r\n      const { rate, text } = this.state;\r\n      const isValid = this.validate();\r\n\r\n      if (isValid) {\r\n        const result = await postReview(\r\n          { rate, text },\r\n          this.props.product.id,\r\n          this.props.token\r\n        );\r\n        this.props.postReview(result);\r\n        this.setState({\r\n          rate: 0,\r\n          text: \"\",\r\n          rateError: \"\",\r\n          textError: \"\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        error: error\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeRating = rate => {\r\n    this.setState({\r\n      rate\r\n    });\r\n  };\r\n\r\n  onChangeText = e => {\r\n    let val = e.target.value;\r\n    val.trim();\r\n\r\n    this.setState({\r\n      text: val\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    const { rate, text } = this.state;\r\n    let rateError = \"\";\r\n    let textError = \"\";\r\n\r\n    if (rate === 0) {\r\n      rateError = \"Вы должны поставить рейтинг\";\r\n    }\r\n    if (!text || /^\\s+$/.test(text)) {\r\n      textError = \"Вы должны заполнить это поле\";\r\n    }\r\n\r\n    if (rateError || textError) {\r\n      this.setState({\r\n        rateError,\r\n        textError\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      props: { show, onClose },\r\n      state: { rate, text, error, rateError, textError }\r\n    } = this;\r\n\r\n    if (!this.props.isAuth) {\r\n      return (\r\n        <ModalComponent\r\n          show={show}\r\n          onClose={onClose}\r\n          className=\"reviewModalMessage\"\r\n        >\r\n          <h4>Войдите, чтобы написать отзыв.</h4>\r\n          <Link className=\"btn btn-primary modalButton\" to=\"/login\">\r\n            Вход\r\n          </Link>\r\n        </ModalComponent>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ModalComponent show={show} onClose={onClose} className=\"reviewModalWrap\">\r\n        <h4 className=\"reviewModalTitle\">Написать отзыв</h4>\r\n        <div className=\"rateBlock\">\r\n          <ReactStars\r\n            value={rate}\r\n            count={5}\r\n            size={60}\r\n            color2={\"#ff8d00\"}\r\n            edit={true}\r\n            className=\"setReviewRating\"\r\n            half={false}\r\n            onChange={this.onChangeRating}\r\n          />\r\n          {rateError && <div className=\"warningMessage\">{rateError}</div>}\r\n        </div>\r\n        <div className=\"reviewBlock\">\r\n          <label htmlFor=\"reviewArea\">Отзыв</label>\r\n          <textarea\r\n            className=\"form-control reviewModalText\"\r\n            rows=\"5\"\r\n            required\r\n            id=\"reviewArea\"\r\n            maxLength=\"90\"\r\n            value={text}\r\n            onChange={this.onChangeText}\r\n          ></textarea>\r\n          {textError && <div className=\"warningMessage\">{textError}</div>}\r\n        </div>\r\n        <div className=\"reviewBtnWrap\">\r\n          <button\r\n            className=\"btn btn-primary modalButton\"\r\n            type=\"button\"\r\n            onClick={this.fetchPostReview}\r\n          >\r\n            Оставить отзыв\r\n          </button>\r\n        </div>\r\n        {error && <div className=\"errorMessage\">{error}</div>}\r\n      </ModalComponent>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactStars from \"react-stars\";\r\nimport \"./Review.sass\";\r\n\r\nconst Review = props => {\r\n  const { reviewItem } = props;\r\n\r\n  return (\r\n    <li className=\"reviewProductItem\">\r\n      <div className=\"reviewCreator\">{reviewItem.created_by.username}</div>\r\n      <div className=\"reviewContent\">\r\n        <ReactStars\r\n          value={reviewItem.rate}\r\n          count={5}\r\n          size={30}\r\n          color2={\"#ff8d00\"}\r\n          edit={false}\r\n          className=\"reviewRate\"\r\n        />\r\n        <div>{reviewItem.text}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Product = props => {\r\n  const { productItem } = props;\r\n\r\n  return (\r\n    <li className=\"card productItem\">\r\n      <Link\r\n        to={{\r\n          pathname: `/productlist/${productItem.id}`,\r\n          state: {\r\n            product: productItem\r\n          }\r\n        }}\r\n      >\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={`http://smktesting.herokuapp.com/static/${productItem.img}`}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"card-body productBody\">\r\n          <h4 className=\"card-title\">{productItem.title}</h4>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport {\n  Navbar,\n  ProductListPage,\n  ProductPage,\n  RegisterPage,\n  LoginPage\n} from \"./components/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAuth: Boolean(localStorage.getItem(\"token\")),\n      username: localStorage.getItem(\"username\"),\n      token: localStorage.getItem(\"token\")\n    };\n  }\n\n  onLogin = (token, username) => {\n    this.setState({\n      isAuth: true,\n      token,\n      username\n    });\n\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"username\", username);\n  };\n\n  onLogout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"token\");\n\n    this.setState({\n      isAuth: false,\n      username: \"\"\n    });\n  };\n\n  render() {\n    const { isAuth, username, token } = this.state;\n\n    return (\n      <BrowserRouter>\n        <div>\n          <Navbar\n            onLogout={this.onLogout}\n            isAuth={isAuth}\n            username={username}\n          />\n          <Switch>\n            <Route exact path=\"/productlist\" component={ProductListPage} />\n            <Route\n              exact\n              path=\"/productlist/:id\"\n              render={props => (\n                <ProductPage\n                  {...props}\n                  isAuth={isAuth}\n                  username={username}\n                  token={token}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={props => (\n                <RegisterPage\n                  {...props}\n                  onLogin={this.onLogin}  \n                  isAuth={isAuth}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={props => (\n                <LoginPage {...props} onLogin={this.onLogin} isAuth={isAuth} />\n              )}\n            />\n            {isAuth && <Redirect to=\"/productlist\" />}\n            <Redirect from=\"/\" to=\"/productlist\" />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}